C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/s150563/Documents/Cooper/Semester 4/Comp_Arch/ECE251-Project1/STOPWATCH1/src/InitDevice.c OMF2 SMALL DEBUG OB
                    -JECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCD
                    -IR(/Users/s150563/Documents/Cooper/Semester 4/Comp_Arch/ECE251-Project1/STOPWATCH1/inc/graphics;/Users/s150563/Documents
                    -/Cooper/Semester 4/Comp_Arch/ECE251-Project1/STOPWATCH1/inc;/Users/s150563/Documents/Cooper/Semester 4/Comp_Arch/ECE251-
                    -Project1/STOPWATCH1/inc/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/com
                    -mon/bsp;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/config;
                    -/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;/A
                    -pplications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;/Applic
                    -ations/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;/Appli
                    -cations/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graph
                    -ics;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd
                    -/inc/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//Device/shared/si8051base;/A
                    -pplications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) REGFILE(STOPWATCH1.OR
                    -C) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              ADC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_3_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              SPI_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // Restore the SFRPAGE
  39   1              SFRPAGE = SFRPAGE_save;
  40   1              // [Config Calls]$
  41   1      
  42   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 2   

  43          
  44          //================================================================================
  45          // WDT_0_enter_DefaultMode_from_RESET
  46          //================================================================================
  47          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  48   1              // $[WDTCN - Watchdog Timer Control]
  49   1              SFRPAGE = 0x00;
  50   1              //Disable Watchdog with key sequence
  51   1              WDTCN = 0xDE; //First key
  52   1              WDTCN = 0xAD; //Second key
  53   1              // [WDTCN - Watchdog Timer Control]$
  54   1      
  55   1      }
  56          
  57          //================================================================================
  58          // PORTS_0_enter_DefaultMode_from_RESET
  59          //================================================================================
  60          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  61   1              // $[P0 - Port 0 Pin Latch]
  62   1              // [P0 - Port 0 Pin Latch]$
  63   1      
  64   1              // $[P0MDOUT - Port 0 Output Mode]
  65   1              /***********************************************************************
  66   1               - P0.0 output is open-drain
  67   1               - P0.1 output is open-drain
  68   1               - P0.2 output is open-drain
  69   1               - P0.3 output is open-drain
  70   1               - P0.4 output is open-drain
  71   1               - P0.5 output is open-drain
  72   1               - P0.6 output is push-pull
  73   1               - P0.7 output is open-drain
  74   1               ***********************************************************************/
  75   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  76   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  77   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
  78   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  79   1              // [P0MDOUT - Port 0 Output Mode]$
  80   1      
  81   1              // $[P0MDIN - Port 0 Input Mode]
  82   1              // [P0MDIN - Port 0 Input Mode]$
  83   1      
  84   1              // $[P0SKIP - Port 0 Skip]
  85   1              /***********************************************************************
  86   1               - P0.0 pin is skipped by the crossbar
  87   1               - P0.1 pin is skipped by the crossbar
  88   1               - P0.2 pin is skipped by the crossbar
  89   1               - P0.3 pin is skipped by the crossbar
  90   1               - P0.4 pin is skipped by the crossbar
  91   1               - P0.5 pin is skipped by the crossbar
  92   1               - P0.6 pin is not skipped by the crossbar
  93   1               - P0.7 pin is not skipped by the crossbar
  94   1               ***********************************************************************/
  95   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  96   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
  97   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
  98   1              // [P0SKIP - Port 0 Skip]$
  99   1      
 100   1              // $[P0MASK - Port 0 Mask]
 101   1              /***********************************************************************
 102   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 103   1               event
 104   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 105   1               event
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 3   

 106   1               - P0.2 pin logic value is compared to P0MAT.2
 107   1               - P0.3 pin logic value is ignored and will not cause a port mismatch
 108   1               event
 109   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 110   1               event
 111   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 112   1               event
 113   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 114   1               event
 115   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 116   1               event
 117   1               ***********************************************************************/
 118   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 119   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 120   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 121   1              // [P0MASK - Port 0 Mask]$
 122   1      
 123   1              // $[P0MAT - Port 0 Match]
 124   1              // [P0MAT - Port 0 Match]$
 125   1      
 126   1      }
 127          
 128          //================================================================================
 129          // PORTS_1_enter_DefaultMode_from_RESET
 130          //================================================================================
 131          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 132   1              // $[P1 - Port 1 Pin Latch]
 133   1              // [P1 - Port 1 Pin Latch]$
 134   1      
 135   1              // $[P1MDOUT - Port 1 Output Mode]
 136   1              /***********************************************************************
 137   1               - P1.0 output is push-pull
 138   1               - P1.1 output is open-drain
 139   1               - P1.2 output is open-drain
 140   1               - P1.3 output is open-drain
 141   1               - P1.4 output is push-pull
 142   1               - P1.5 output is push-pull
 143   1               - P1.6 output is push-pull
 144   1               - P1.7 output is open-drain
 145   1               ***********************************************************************/
 146   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 147   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 148   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 149   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 150   1              // [P1MDOUT - Port 1 Output Mode]$
 151   1      
 152   1              // $[P1MDIN - Port 1 Input Mode]
 153   1              /***********************************************************************
 154   1               - P1.0 pin is configured for digital mode
 155   1               - P1.1 pin is configured for analog mode
 156   1               - P1.2 pin is configured for digital mode
 157   1               - P1.3 pin is configured for digital mode
 158   1               - P1.4 pin is configured for digital mode
 159   1               - P1.5 pin is configured for digital mode
 160   1               - P1.6 pin is configured for digital mode
 161   1               - P1.7 pin is configured for analog mode
 162   1               ***********************************************************************/
 163   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 164   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 165   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 166   1              // [P1MDIN - Port 1 Input Mode]$
 167   1      
 168   1              // $[P1SKIP - Port 1 Skip]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 4   

 169   1              /***********************************************************************
 170   1               - P1.0 pin is not skipped by the crossbar
 171   1               - P1.1 pin is skipped by the crossbar
 172   1               - P1.2 pin is skipped by the crossbar
 173   1               - P1.3 pin is skipped by the crossbar
 174   1               - P1.4 pin is not skipped by the crossbar
 175   1               - P1.5 pin is not skipped by the crossbar
 176   1               - P1.6 pin is not skipped by the crossbar
 177   1               - P1.7 pin is skipped by the crossbar
 178   1               ***********************************************************************/
 179   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 180   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 181   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 182   1                              | P1SKIP_B7__SKIPPED;
 183   1              // [P1SKIP - Port 1 Skip]$
 184   1      
 185   1              // $[P1MASK - Port 1 Mask]
 186   1              // [P1MASK - Port 1 Mask]$
 187   1      
 188   1              // $[P1MAT - Port 1 Match]
 189   1              // [P1MAT - Port 1 Match]$
 190   1      
 191   1      }
 192          
 193          //================================================================================
 194          // PORTS_2_enter_DefaultMode_from_RESET
 195          //================================================================================
 196          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 197   1              // $[P2 - Port 2 Pin Latch]
 198   1              // [P2 - Port 2 Pin Latch]$
 199   1      
 200   1              // $[P2MDOUT - Port 2 Output Mode]
 201   1              /***********************************************************************
 202   1               - P2.0 output is open-drain
 203   1               - P2.1 output is open-drain
 204   1               - P2.2 output is open-drain
 205   1               - P2.3 output is push-pull
 206   1               - P2.4 output is open-drain
 207   1               - P2.5 output is open-drain
 208   1               - P2.6 output is push-pull
 209   1               ***********************************************************************/
 210   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 211   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 212   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 213   1                              | P2MDOUT_B6__PUSH_PULL;
 214   1              // [P2MDOUT - Port 2 Output Mode]$
 215   1      
 216   1              // $[P2MDIN - Port 2 Input Mode]
 217   1              // [P2MDIN - Port 2 Input Mode]$
 218   1      
 219   1              // $[P2SKIP - Port 2 Skip]
 220   1              /***********************************************************************
 221   1               - P2.0 pin is not skipped by the crossbar
 222   1               - P2.1 pin is not skipped by the crossbar
 223   1               - P2.2 pin is not skipped by the crossbar
 224   1               - P2.3 pin is skipped by the crossbar
 225   1               ***********************************************************************/
 226   1              SFRPAGE = 0x20;
 227   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 228   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 229   1              // [P2SKIP - Port 2 Skip]$
 230   1      
 231   1              // $[P2MASK - Port 2 Mask]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 5   

 232   1              // [P2MASK - Port 2 Mask]$
 233   1      
 234   1              // $[P2MAT - Port 2 Match]
 235   1              // [P2MAT - Port 2 Match]$
 236   1      
 237   1      }
 238          
 239          //================================================================================
 240          // PBCFG_0_enter_DefaultMode_from_RESET
 241          //================================================================================
 242          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 243   1              // $[XBR2 - Port I/O Crossbar 2]
 244   1              /***********************************************************************
 245   1               - Weak Pullups enabled 
 246   1               - Crossbar enabled
 247   1               - UART1 I/O unavailable at Port pin
 248   1               - UART1 RTS1 unavailable at Port pin
 249   1               - UART1 CTS1 unavailable at Port pin
 250   1               ***********************************************************************/
 251   1              SFRPAGE = 0x00;
 252   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 253   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 254   1                              | XBR2_URT1CTSE__DISABLED;
 255   1              // [XBR2 - Port I/O Crossbar 2]$
 256   1      
 257   1              // $[PRTDRV - Port Drive Strength]
 258   1              // [PRTDRV - Port Drive Strength]$
 259   1      
 260   1              // $[XBR0 - Port I/O Crossbar 0]
 261   1              /***********************************************************************
 262   1               - UART0 I/O unavailable at Port pin
 263   1               - SPI I/O routed to Port pins
 264   1               - SMBus 0 I/O unavailable at Port pins
 265   1               - CP0 unavailable at Port pin
 266   1               - Asynchronous CP0 unavailable at Port pin
 267   1               - CP1 unavailable at Port pin
 268   1               - Asynchronous CP1 unavailable at Port pin
 269   1               - SYSCLK unavailable at Port pin
 270   1               ***********************************************************************/
 271   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 272   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 273   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 274   1              // [XBR0 - Port I/O Crossbar 0]$
 275   1      
 276   1              // $[XBR1 - Port I/O Crossbar 1]
 277   1              /***********************************************************************
 278   1               - CEX0, CEX1, CEX2 routed to Port pins
 279   1               - ECI unavailable at Port pin
 280   1               - T0 unavailable at Port pin
 281   1               - T1 unavailable at Port pin
 282   1               - T2 unavailable at Port pin
 283   1               ***********************************************************************/
 284   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 285   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 286   1              // [XBR1 - Port I/O Crossbar 1]$
 287   1      
 288   1      }
 289          
 290          //================================================================================
 291          // ADC_0_enter_DefaultMode_from_RESET
 292          //================================================================================
 293          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 294   1              // $[ADC0CN2 - ADC0 Control 2]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 6   

 295   1              /***********************************************************************
 296   1               - ADC0 conversion initiated on overflow of Timer 0
 297   1               - The ADC accumulator is over-written with the results of any conversion
 298   1               ***********************************************************************/
 299   1              ADC0CN2 = ADC0CN2_ADCM__TIMER0 | ADC0CN2_PACEN__PAC_DISABLED;
 300   1              // [ADC0CN2 - ADC0 Control 2]$
 301   1      
 302   1              // $[ADC0CN1 - ADC0 Control 1]
 303   1              // [ADC0CN1 - ADC0 Control 1]$
 304   1      
 305   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 306   1              /***********************************************************************
 307   1               - Select ADC0.13
 308   1               ***********************************************************************/
 309   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 310   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 311   1      
 312   1              // $[ADC0CF2 - ADC0 Power Control]
 313   1              /***********************************************************************
 314   1               - The ADC0 ground reference is the GND pin
 315   1               - The ADC0 voltage reference is the VDD pin
 316   1               - Power Up Delay Time = 0x1F
 317   1               ***********************************************************************/
 318   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 319   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 320   1              // [ADC0CF2 - ADC0 Power Control]$
 321   1      
 322   1              // $[ADC0CF0 - ADC0 Configuration]
 323   1              /***********************************************************************
 324   1               - ADCCLK = SYSCLK
 325   1               - SAR Clock Divider = 0x01
 326   1               ***********************************************************************/
 327   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 328   1              // [ADC0CF0 - ADC0 Configuration]$
 329   1      
 330   1              // $[ADC0CF1 - ADC0 Configuration]
 331   1              /***********************************************************************
 332   1               - Enable low power mode
 333   1               - Conversion Tracking Time = 0x01
 334   1               ***********************************************************************/
 335   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 336   1              // [ADC0CF1 - ADC0 Configuration]$
 337   1      
 338   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 339   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 340   1      
 341   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 342   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 343   1      
 344   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 345   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 346   1      
 347   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 348   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 349   1      
 350   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 351   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 352   1      
 353   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 354   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 355   1      
 356   1              // $[ADC0CN0 - ADC0 Control 0]
 357   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 7   

 358   1               - Enable ADC0 
 359   1               ***********************************************************************/
 360   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 361   1              // [ADC0CN0 - ADC0 Control 0]$
 362   1      
 363   1      }
 364          
 365          //================================================================================
 366          // CLOCK_0_enter_DefaultMode_from_RESET
 367          //================================================================================
 368          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 369   1              // $[HFOSC1 Setup]
 370   1              // [HFOSC1 Setup]$
 371   1      
 372   1              // $[CLKSEL - Clock Select]
 373   1              /***********************************************************************
 374   1               - Clock derived from the Internal High Frequency Oscillator 0
 375   1               - SYSCLK is equal to selected clock source divided by 1
 376   1               ***********************************************************************/
 377   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 378   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 379   1                      ;
 380   1              // [CLKSEL - Clock Select]$
 381   1      
 382   1      }
 383          
 384          //================================================================================
 385          // TIMER01_0_enter_DefaultMode_from_RESET
 386          //================================================================================
 387          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 388   1              // $[Timer Initialization]
 389   1              //Save Timer Configuration
 390   1              uint8_t TCON_save;
 391   1              TCON_save = TCON;
 392   1              //Stop Timers
 393   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 394   1      
 395   1              // [Timer Initialization]$
 396   1      
 397   1              // $[TH0 - Timer 0 High Byte]
 398   1              /***********************************************************************
 399   1               - Timer 0 High Byte = 0x01
 400   1               ***********************************************************************/
 401   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 402   1              // [TH0 - Timer 0 High Byte]$
 403   1      
 404   1              // $[TL0 - Timer 0 Low Byte]
 405   1              // [TL0 - Timer 0 Low Byte]$
 406   1      
 407   1              // $[TH1 - Timer 1 High Byte]
 408   1              // [TH1 - Timer 1 High Byte]$
 409   1      
 410   1              // $[TL1 - Timer 1 Low Byte]
 411   1              // [TL1 - Timer 1 Low Byte]$
 412   1      
 413   1              // $[Timer Restoration]
 414   1              //Restore Timer Configuration
 415   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 416   1      
 417   1              // [Timer Restoration]$
 418   1      
 419   1      }
 420          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 8   

 421          //================================================================================
 422          // TIMER16_3_enter_DefaultMode_from_RESET
 423          //================================================================================
 424          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 425   1              // $[Timer Initialization]
 426   1              // Save Timer Configuration
 427   1              uint8_t TMR3CN0_TR3_save;
 428   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 429   1              // Stop Timer
 430   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 431   1              // [Timer Initialization]$
 432   1      
 433   1              // $[TMR3CN1 - Timer 3 Control 1]
 434   1              // [TMR3CN1 - Timer 3 Control 1]$
 435   1      
 436   1              // $[TMR3CN0 - Timer 3 Control]
 437   1              // [TMR3CN0 - Timer 3 Control]$
 438   1      
 439   1              // $[TMR3H - Timer 3 High Byte]
 440   1              /***********************************************************************
 441   1               - Timer 3 High Byte = 0xF8
 442   1               ***********************************************************************/
 443   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 444   1              // [TMR3H - Timer 3 High Byte]$
 445   1      
 446   1              // $[TMR3L - Timer 3 Low Byte]
 447   1              /***********************************************************************
 448   1               - Timer 3 Low Byte = 0x06
 449   1               ***********************************************************************/
 450   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 451   1              // [TMR3L - Timer 3 Low Byte]$
 452   1      
 453   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 454   1              /***********************************************************************
 455   1               - Timer 3 Reload High Byte = 0xF8
 456   1               ***********************************************************************/
 457   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 458   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 459   1      
 460   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 461   1              /***********************************************************************
 462   1               - Timer 3 Reload Low Byte = 0x06
 463   1               ***********************************************************************/
 464   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 465   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 466   1      
 467   1              // $[TMR3CN0]
 468   1              /***********************************************************************
 469   1               - Start Timer 3 running
 470   1               ***********************************************************************/
 471   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 472   1              // [TMR3CN0]$
 473   1      
 474   1              // $[Timer Restoration]
 475   1              // Restore Timer Configuration
 476   1              TMR3CN0 |= TMR3CN0_TR3_save;
 477   1              // [Timer Restoration]$
 478   1      
 479   1      }
 480          
 481          //================================================================================
 482          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 483          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 9   

 484          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 485   1              // $[CKCON0 - Clock Control 0]
 486   1              /***********************************************************************
 487   1               - System clock divided by 48
 488   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 489   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 490   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 491   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 492   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 493   1               - Timer 1 uses the clock defined by the prescale field, SCA
 494   1               ***********************************************************************/
 495   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 496   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 497   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 498   1                              | CKCON0_T1M__PRESCALE;
 499   1              // [CKCON0 - Clock Control 0]$
 500   1      
 501   1              // $[CKCON1 - Clock Control 1]
 502   1              // [CKCON1 - Clock Control 1]$
 503   1      
 504   1              // $[TMOD - Timer 0/1 Mode]
 505   1              /***********************************************************************
 506   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 507   1               - Mode 0, 13-bit Counter/Timer
 508   1               - Timer Mode
 509   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 510   1               - Timer Mode
 511   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 512   1               ***********************************************************************/
 513   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 514   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 515   1              // [TMOD - Timer 0/1 Mode]$
 516   1      
 517   1              // $[TCON - Timer 0/1 Control]
 518   1              /***********************************************************************
 519   1               - Start Timer 0 running
 520   1               ***********************************************************************/
 521   1              TCON |= TCON_TR0__RUN;
 522   1              // [TCON - Timer 0/1 Control]$
 523   1      
 524   1      }
 525          
 526          //================================================================================
 527          // SPI_0_enter_DefaultMode_from_RESET
 528          //================================================================================
 529          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 530   1              // $[SPI0CKR - SPI0 Clock Rate]
 531   1              /***********************************************************************
 532   1               - SPI0 Clock Rate = 0x0B
 533   1               ***********************************************************************/
 534   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 535   1              // [SPI0CKR - SPI0 Clock Rate]$
 536   1      
 537   1              // $[SPI0CFG - SPI0 Configuration]
 538   1              /***********************************************************************
 539   1               - Enable master mode. Operate as a master
 540   1               ***********************************************************************/
 541   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 542   1              // [SPI0CFG - SPI0 Configuration]$
 543   1      
 544   1              // $[SPI0PCF - SPI0 Pin Configuration]
 545   1              // [SPI0PCF - SPI0 Pin Configuration]$
 546   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 10  

 547   1              // $[SPI0CN0 - SPI0 Control]
 548   1              /***********************************************************************
 549   1               - Enable the SPI module
 550   1               - 3-Wire Slave or 3-Wire Master Mode
 551   1               ***********************************************************************/
 552   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 553   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 554   1              // [SPI0CN0 - SPI0 Control]$
 555   1      
 556   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 557   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 558   1      
 559   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 560   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 561   1      
 562   1      }
 563          
 564          //================================================================================
 565          // INTERRUPT_0_enter_DefaultMode_from_RESET
 566          //================================================================================
 567          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 568   1              // $[EIE1 - Extended Interrupt Enable 1]
 569   1              /***********************************************************************
 570   1               - Enable interrupt requests generated by the ADINT flag
 571   1               - Disable ADC0 Window Comparison interrupt
 572   1               - Disable CP0 interrupts
 573   1               - Disable CP1 interrupts
 574   1               - Enable interrupt requests generated by a Port Match
 575   1               - Disable all PCA0 interrupts
 576   1               - Disable all SMB0 interrupts
 577   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 578   1               ***********************************************************************/
 579   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 580   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 581   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 582   1              // [EIE1 - Extended Interrupt Enable 1]$
 583   1      
 584   1              // $[EIE2 - Extended Interrupt Enable 2]
 585   1              // [EIE2 - Extended Interrupt Enable 2]$
 586   1      
 587   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 588   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 589   1      
 590   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 591   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 592   1      
 593   1              // $[EIP2 - Extended Interrupt Priority 2]
 594   1              // [EIP2 - Extended Interrupt Priority 2]$
 595   1      
 596   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 597   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 598   1      
 599   1              // $[IE - Interrupt Enable]
 600   1              /***********************************************************************
 601   1               - Disable all interrupt sources
 602   1               - Disable external interrupt 0
 603   1               - Disable external interrupt 1
 604   1               - Enable interrupt requests generated by SPI0
 605   1               - Disable all Timer 0 interrupt
 606   1               - Disable all Timer 1 interrupt
 607   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 608   1               - Disable UART0 interrupt
 609   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/10/2017 23:02:36 PAGE 11  

 610   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 611   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 612   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 613   1              // [IE - Interrupt Enable]$
 614   1      
 615   1              // $[IP - Interrupt Priority]
 616   1              // [IP - Interrupt Priority]$
 617   1      
 618   1              // $[IPH - Interrupt Priority High]
 619   1              // [IPH - Interrupt Priority High]$
 620   1      
 621   1      }
 622          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    198    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
