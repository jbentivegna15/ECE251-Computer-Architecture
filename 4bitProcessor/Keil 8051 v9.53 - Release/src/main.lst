C51 COMPILER V9.53.0.0   MAIN                                                              03/26/2017 18:24:35 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src/main.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/s150563/Documents/Cooper/Semester 4/Comp_Arch/ECE251-Project1/4bitProcessor/src/main.c OMF2 SMALL DEBUG OBJEC
                    -TEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(
                    -/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//Device/shared/si8051base;/Applications/
                    -Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) REGFILE(4bitProcessor.ORC) PRINT(
                    -.\src/main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/main.OBJ)

line level    source

   1          #include <SI_EFM8BB3_Register_Enums.h> // SFR declarations
   2          #include <stdio.h>
   3          #include <stdlib.h>
   4          
   5          #define TIME 1000 //appx 0.5secs
   6          
   7          //GPIO & SFR definitions
   8          SI_SBIT(LED0, SFR_P1, 4);                  // P1.4 LED0 GREEN
   9          SI_SBIT(LED1, SFR_P1, 5);                  // P1.5 LED1 BLUE
  10          SI_SBIT(LED2, SFR_P1, 6);                  // P1.6 LED2 RED
  11          
  12          SI_SBIT(BTN0, SFR_P0, 2);                  // P0.2 BTN0
  13          SI_SBIT(BTN1, SFR_P0, 3);                  // P0.3 BTN1
  14          
  15          SI_SBIT(OP0, SFR_P1, 0);                                   // P1.0 OP0
  16          SI_SBIT(OP1, SFR_P1, 1);                                   // P1.1 OP1
  17          
  18          SI_SBIT(CLK, SFR_P1, 3);                                   // P1.3 CLK
  19          
  20          //TEMP REGISTER
  21          SI_SBIT(T0, SFR_P3, 0);                                    // P3.0 LSB
  22          SI_SBIT(T1, SFR_P3, 1);                                    // P3.1
  23          SI_SBIT(T2, SFR_P3, 2);                                    // P3.2
  24          SI_SBIT(T3, SFR_P3, 3);                                    // P3.3 MSB
  25          
  26          //time delay of default TIME seconds
  27          void delay(int n) {
  28   1              uint16_t i;
  29   1              int j;
  30   1              for(j=0;j<n;j++){
  31   2                      for (i=0; i<TIME; i++);
  32   2              }
  33   1      }
  34          
  35          //blinks one of 3 LEDs n times
  36          void blink(int LED, int n){
  37   1              if(n<=0){
  38   2                      printf("nfERROR: blink() arg not valid n\n"); //cannot blink negative times (nf: non-fatal)
  39   2              } else{
  40   2                      switch(LED){
  41   3                              case 0:
  42   3                                      while(n>0){
  43   4                                              LED0 = 0;
  44   4                                              delay(1);
  45   4                                              LED0 = 1;
  46   4                                              delay(1);
  47   4                                              n--;
  48   4                                      }
  49   3                                      break;
  50   3                              case 1:
  51   3                                      while(n>0){
C51 COMPILER V9.53.0.0   MAIN                                                              03/26/2017 18:24:35 PAGE 2   

  52   4                                              LED1 = 0;
  53   4                                              delay(1);
  54   4                                              LED1 = 1;
  55   4                                              delay(1);
  56   4                                              n--;
  57   4                                      }
  58   3                                      break;
  59   3                              case 2:
  60   3                                      while(n>0){
  61   4                                              LED2 = 0;
  62   4                                              delay(1);
  63   4                                              LED2 = 1;
  64   4                                              delay(1);
  65   4                                              n--;
  66   4                                      }
  67   3                                      break;
  68   3                      }
  69   2              }
  70   1      }
  71          
  72          //clock signal 1 pulse based on delay()
  73          void clk(){
  74   1              CLK = 0;
  75   1              delay(1);
  76   1              CLK = 1;
  77   1              delay(1);
  78   1              CLK = 0;
  79   1              delay(1);
  80   1      
  81   1              blink(2,1); //visual aid
  82   1      }
  83          
  84          //OP code translation (from dec. to GPIOpins) (valid ops: 0,1,2,3)
  85          void op(int opcode){
  86   1              switch(opcode){
  87   2                      case 0:                 //ZEROS
  88   2                              OP0=0;
  89   2                              OP1=0;
  90   2                              break;
  91   2                      case 1:                 //AND
  92   2                              OP0=1;
  93   2                              OP1=0;
  94   2                              break;
  95   2                      case 2:                 //OR
  96   2                              OP0=0;
  97   2                              OP1=1;
  98   2                              break;
  99   2                      case 3:                 //ADDITION
 100   2                              OP0=1;
 101   2                              OP1=1;
 102   2                              break;
 103   2              }
 104   1      
 105   1              blink(1,1);             //for visual aid
 106   1      }
 107          
 108          int* dec2bin(int c){
 109   1              int *arr = malloc(4);
 110   1      
 111   1              int i = 0;
 112   1              for(i = 31; i >= 0; i--){
 113   2                      if((c & (1 << i)) != 0){
 114   3                              arr[i] = 1;
C51 COMPILER V9.53.0.0   MAIN                                                              03/26/2017 18:24:35 PAGE 3   

 115   3                      }else{
 116   3                              arr[i] = 0;
 117   3                      }
 118   2              }
 119   1              return arr;
 120   1      }
 121          
 122          void uTemp(int num){
 123   1              int *binptr;
 124   1              binptr = dec2bin(num);
 125   1              T0 = *(binptr);
 126   1              T1 = *(binptr+1);
 127   1              T2 = *(binptr+2);
 128   1              T3 = *(binptr+3);
 129   1      
 130   1              free(binptr);
 131   1              blink(0,1);
 132   1      }
 133          
 134          int main(void) {
 135   1              XBR2 |= 0x40; //Enable Crossbar so we can easily turn pins on and off.
 136   1      
 137   1              op(0);
 138   1              uTemp(1);
 139   1              clk();
 140   1      
 141   1              while (1) {
 142   2                      if(BTN0==0){
 143   3                              op(3);
 144   3                              clk();
 145   3      
 146   3                              delay(100);
 147   3                      }
 148   2      
 149   2              } // Spin forever
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    429    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
